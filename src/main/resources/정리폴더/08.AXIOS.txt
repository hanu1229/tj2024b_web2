[AXIOS] : 비동기 통신
    01. 대표적인 비동기 통신 함수
        - Fetch --> 자바스크립트 내장 함수
        - axios --> Axois.js
    02. 특징
        - *JSON타입으로 자동 변환*
        - Node.js환경을 지원, CSRF

    03. 설치
        js(CDN) : <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        react(npm) : ~

    04. 문법
        - axios.HTTP메소드명("통신할HTTP주소", {body}, {option})
            - HTTP메소드명 : axios.post(), axios.get(), axios.put(), axios.delete()
            - 통신할HTTP주소 : 스프링환경에서는 RestController에서 정의한 매핑 주소
                @GetMapping("/day04/student") ----> "/day04/student"
            - body : 보내고자 하는 자료/데이터 객체{}
                - body 사용   : POST, PUT
                - body 미사용 : GET, DELETE
            - option : HTTP header 설정
                - 기본값은 content-type : "application/json"

    05. 동기화 관례적인 유형들 : 여러개의 통신을 순차 처리 할 경우 주로 동기화, 여러개의 통신을 동시 처리 할 경우에는 주로 비동기화
        05-1. 동기화 유형1
            () => {
                axios.post("", {}, {})
                .then(response => { console.log(response.data); })
                .catch(error => { console.log(error); })
            }

        05-2. 동기화 유형2, .then O / .catch O
            async () => {
                await axios.post("", {}, {})
                .then(response => { console.log(response.data); })
                .catch(error => { console.log(error); })
            }

        05-3. 동기화 유형3, .then X / .catch X
            async () => {
                try {
                    let response = await axios.post("", {}, {});
                    console.log(response.data);
                } catch(error) {
                    console.log(error);
                }
            }