서로 다른 컴포넌트간의 자료를 이동하는 방법
    - props
        - <컴포넌트 속성명 = {값} />
        - <Product item={{id : 1, name : "콜라"}} />
        - <Product onState = {setState} />

    - localStorage/sessionStorage : 브라우저 저장소
        - localStorage : 브라우저가 꺼져도 사라지지 않는다.
        - sessionStorage : 브라우저가 꺼지면 사라진다
    등등

* 컴포넌트 안에 자료를 저장하는 방법
    - useState : (지역 상태 관리) 컴포넌트 내부에서 사용하므로 다른 컴포넌트와 공유할 때는 props를 활용한다.

[리덕스 Redux]
    01. 정의 : 전역 상태 관리 라이브러리로 서로 다른 컴포넌트 간의 효율적인 상태를 공유

    02. 목적 : state상태를 저장하는 store저장소를 만들고 서로 다른 컴포넌트 간의 일관적인 state를 유지한다(전역변수이기에 가능)

    03. 활용처 : 로그인 상태, 권한, 테마, 자동로그인 등등 단 제품등록같은 경우 사용 X
        03-1. 로그인 후 글쓰기/제품등록 등등을 할때마다 로그인 상태를 확인하면 번거롭다.
        03-2. 로그인 후 권한에 따라 글쓰기 페이지 이동을 차단할 때 로그인 상태를 확인하면 번거롭다.

    04. 활용 목적
        04-1. 전역 상태(변수) 관리가 필요할 때
        04-2. 여러개의 컴포넌트에서 동일한 상태(변수)를 공유할 때
        04-3. 컴포넌트 간 props전달이 복잡할 때

    05. 핵심 개념
        - Store(저장소) : 상태를 저장하는 공간/메모리, 상태들을 관리하는 중앙(사용할 리듀서를 등록한다)
        - Slice : 상태와 리듀서를 한번에 정의하는 곳, createSlice 함수로 사용할 리듀서 또는 상태를 만든다
        - Action(액션) : 상태를 변경하는 함수
        - Reducer(리듀서) : 액션을 받아서 상태를 처리하는 함수

    06. 핵심 함수
        06-1. redux
            import { Provider } from "react-redux";
            - Provider()
                - 리덕스 store를 다른 컴포넌트들에게 공급하는 역할(보통 라우터 사용하는 곳에서 많이 사용)
                - 사용법
                    <Provider store={stroe}> 여러 컴포넌트 </Provider>

            import { Provider } from "react-redux";
            - useDispatch()
                - 리덕스에서 액션(함수)를 보낼 때 dispatch를 사용
                - dispatch(함수명(인자값)) == dispatch(액션이름(액션값))

            import { Provider } from "react-redux";
            - useSelector()
                - 리덕스에서 전역상태(state/값)를 조회/가져올 때 사용


        06-2. redux-toolkit
            - 기존 리덕스의 전역 상태를 설정하는 코드를 간결하게 사용할 수 있도록 함
            import { configureStore } from "@reduxjs/toolkit";
            - configureStore()
                - 여러개의 리듀서들을 저장하고 관리를 하기 위한  객체ㅁ를 만들기 위한 설정 함수
                - 사용법
                    - configureStroe({reducer : { 등록이름(key) : 등록할 리듀서(value) }})

            import { configureStore } from "@reduxjs/toolkit";
            - createSlice()
                - 하나의 상태 또는 리듀서를 만들기 위한 설정 함수
                - 사용법
                    - createSlice({ 
                        name : 이름, 
                        저장할 초기값, 
                        reducers : {
                            함수명1 : (state, action) => {},
                            함수명2 : (state, action) => {},
                            } 
                      })

    07. 사용방법
        - Redux
        - Redux Toolkit
            - 설치  : npm install @reduxjs/toolkit
                    : npm install react-redux
            - 전역 상태(변수)를 저장할 store 만들기
            - Slice에서 전역 상태와 리듀서 만들기1
            - 전역상태(변수)를 사용할 컴포넌트들을 <Provider store = {}> </Provider>로 전체를 감싼다

    07. 리덕스 상태도 새로고침(F5)를 하면 사라짐
         07-1. 해결방안 : 리덕스 퍼시스턴스를 사용하여 localStorage에 상태(변수)를 유지한다.
                - 설치 : npm install redux-persist
                - store.jsx에서 퍼시스턴스를 설정, localStorage 적용하기
